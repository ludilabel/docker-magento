#!/usr/bin/env bash
set -o errexit
# dépend de bin/setup-domain-dn

# Arguments :
# $1 : WIN_HOST (Optionnel) chemin complet Windows du fichier hosts

source env/dev-setup-config.env
source env/setup/magento-stores.env
source bin/terminal-colors

# listes de données dans env/magento-stores.env
# boutiques Magento 2
declare -A store_codes
for entry in ${TLD_STORE_MAP}; do
  store_codes[${entry%%:*}]=${entry##*:}
done

if [ "$1" ]; then
  WIN_HOST="$1"
else
    if [ "$OS_HOSTS" ]; then
        echo "Le chemin windows du fichier hosts est déjà configuré : $(yellow "$OS_HOSTS")"
        DEBIAN_WIN_HOST="$OS_HOSTS"
    else
        echo "Coller le chemin Windows complet du fichier hosts"
        read -r -p "(Entrée pour la valeur par défaut : C:\Windows\System32\drivers\etc\hosts) : " WIN_HOST
        WIN_HOST=${WIN_HOST:-"C:\\Windows\\System32\\drivers\\etc\\hosts"}
    fi
fi


# Transformation du chemin Windows en chemin Debian WSL2
if [[ "$WIN_HOST" =~ ^[A-Za-z]:\\ ]]; then

    # Remplacer les antislashs par des slashes pour la conversion avec wslpath
    DEBIAN_WIN_HOST=$(echo "$WIN_HOST" | sed 's|\\|/|g')

    # Convertir le chemin au format WSL
    DEBIAN_WIN_HOST=$(wslpath -a "$DEBIAN_WIN_HOST")

    if [ $? -ne 0 ]; then
        echo "Erreur lors de la conversion du chemin."
        exit 1
    fi

fi

# Vérifier si le fichier existe
if [ ! -f "$DEBIAN_WIN_HOST" ]; then
    echo "Le fichier spécifié n'existe pas."
    exit 1
fi

if [ "$OS_HOSTS" ]; then
  if [ "$1" ]; then
    sed -i "s|^OS_HOSTS=.*|OS_HOSTS=\"$OS_HOSTS\"|" env/dev-setup-config.env
  fi
else
    echo "Ajout de la variable OS_HOSTS à la fin du fichier env/dev-setup-config.env."
    echo "OS_HOSTS=\"$DEBIAN_WIN_HOST\"" >> env/dev-setup-config.env
fi

DEBIAN_IP=$(hostname -I | awk '{print $1}')

# Initialize an array to hold entries that need to be added
entries_to_add=()
ALL_FQDN=()

# Loop through each top-level domain and prepare the corresponding entry
for TLD in "${!store_codes[@]}"; do
    # Define the entry for each TLD
    entry="$DEBIAN_IP $DN.$TLD"

    ALL_FQDN+=("$DN.$TLD")

    # Check if the entry already exists in the hosts file
    if ! grep -q "$entry" "$DEBIAN_WIN_HOST"; then
        echo "Preparing to add entry $entry to the Windows hosts file..."
        entries_to_add+=("$entry")
    else
        echo "Entry $entry already exists in the hosts file."
    fi
done

# If there are entries to add, make a list for the user to copy it
if [ ${#entries_to_add[@]} -gt 0 ]; then
    echo "Nous avons analysé votre fichier hosts"
    echo "Il manque les entrées suivantes, copier/coller les dans $WIN_HOST en mode administrateur."

    # Affichage de la liste dans la console pour être copiée
    echo
        for entry in "${entries_to_add[@]}"; do
            yellow "$entry"
        done

    read -p "Continuer l'exécution du script"

else
    echo "Toutes les entrées existent déjà dans le fichier hosts."
fi

# Pour permettre une communication entre les conteneurs Docker et le Windows du développeur (IDE, etc.)
bin/setup-host-docker-win "$DEBIAN_WIN_HOST"