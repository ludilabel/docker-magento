#!/usr/bin/env bash
set -o errexit
# dépend de bin/setup-domain-dn

# Arguments :
# $1 : WIN_HOST (Optionnel) chemin complet Windows du fichier hosts

source env/dev-setup-config.env
source env/setup/magento-stores.env

# listes de données dans env/magento-stores.env
# boutiques Magento 2
declare -A store_codes
for entry in ${TLD_STORE_MAP}; do
  store_codes[${entry%%:*}]=${entry##*:}
done

if [ "$1" ]; then
  WIN_HOST="$1"
  echo "En cas d'erreur, avez-vous utilisé des quotes autour du chemin ?"
  echo 'Usage: bin/* "C:\Windows\System32\drivers\etc\hosts"'

else
  echo "Veuillez coller le chemin Windows complet du fichier hosts"
  read -r -p "(ex : C:\Windows\System32\drivers\etc\hosts) : " WIN_HOST
fi


# Transformation du chemin Windows en chemin Debian WSL2
if [[ "$WIN_HOST" =~ ^[A-Za-z]:\\ ]]; then

    # Remplacer les antislashs par des slashes pour la conversion avec wslpath
    WIN_HOST=$(echo "$WIN_HOST" | sed 's|\\|/|g')

    # Convertir le chemin au format WSL
    WIN_HOST=$(wslpath -a "$WIN_HOST")

    if [ $? -ne 0 ]; then
        echo "Erreur lors de la conversion du chemin."
        exit 1
    fi

    echo "Chemin converti au format Debian WSL2 : $WIN_HOST"
fi

# Vérifier si le fichier existe
if [ ! -f "$WIN_HOST" ]; then
    echo "Le fichier spécifié n'existe pas."
    exit 1
fi

DEBIAN_IP=$(hostname -I | awk '{print $1}')

# Initialize an array to hold entries that need to be added
entries_to_add=()
ALL_FQDN=()



# Loop through each top-level domain and prepare the corresponding entry
for TLD in "${!store_codes[@]}"; do
    # Define the entry for each TLD
    entry="$DEBIAN_IP $DN.$TLD"

    ALL_FQDN+=("$DN.$TLD")

    # Check if the entry already exists in the hosts file
    if ! grep -q "$entry" "$WIN_HOST"; then
        echo "Preparing to add entry $entry to the Windows hosts file..."
        entries_to_add+=("$entry")
    else
        echo "Entry $entry already exists in the hosts file."
    fi
done

# If there are entries to add, run the PowerShell script
# 09/2024 : only tested on Windows 10
if [ ${#entries_to_add[@]} -gt 0 ]; then
    echo "Adding entries to the Windows hosts file..."
    echo "Vous devez fermer provisoirement vos navigateurs web, sqlyog et powershell avant de continuer pour éviter un conflit sur le ficher Windows hosts"

    # script is halted until user response
    read -p "Appuyez sur entrée une fois que les navigateurs, sqlyog et powershell sont fermés."

    echo "Please accept PowerShell invitation if any"

    # Convert the array to a PowerShell-compatible string
    entries_ps="$(printf "'%s'; " "${entries_to_add[@]}")"

    powershell.exe -Command "
    \$entries = @($entries_ps);
    \$entries | ForEach-Object { Add-Content -Path 'C:\Windows\System32\drivers\etc\hosts' -Value \$_ }
    "
else
    echo "All entries already exist in the hosts file."
fi

# Pour permettre une communication entre les conteneurs Docker et le Windows du développeur (IDE, etc.)
bin/setup-host-docker-win "$WIN_HOST"

echo "Vous pouvez rouvrir vos navigateurs web, sqlyog et powershell"