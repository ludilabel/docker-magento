#!/usr/bin/env bash

####

echo "Mise à jour des packages de la Debian"
sudo apt-get update
sudo apt-get upgrade -y

####
echo "Installation de docker serveur et cli"
# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install -y ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

# installer les packages
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

####
echo "modification de /etc/wsl.conf pour activer le système de démarrage automatique de services de la Debian "
# Créer le fichier /etc/wsl.conf s'il n'existe pas
sudo touch /etc/wsl.conf
# Ajouter les lignes nécessaires au fichier
sudo bash -c 'echo -e "[boot]\nsystemd=true" > /etc/wsl.conf'
# un redémarrage Debian wsl2 est nécessaire si on veut que le systemd soit utilisable par d'autres programmes

####
echo "Installation des programmes vim, rsync et bc"
sudo apt-get install -y vim rsync bc

echo "Installation du programme make"
sudo apt-get install -y build-essential

####

# Gestion des connections ssh
mkdir -p ~/.ssh
chmod 700 ~/.ssh
touch ~/.ssh/known_hosts
chmod 600 ~/.ssh/known_hosts

echo "création de .ssh et .ssh/known_hosts pour compose.yaml"

####

# A l'ouverture du shell, placer le développeur dans le bon répertoire pour lancer les commandes bin/* de docker-magento
TARGET_DIR="$HOME/docker-magento/ludilabel/compose/"

# Command to add
COMMAND="cd $TARGET_DIR"

# Files to modify
FILES=("$HOME/.bashrc" "$HOME/.bash_profile")

# Add the command to each file, creating the file if it doesn't exist
for FILE in "${FILES[@]}"; do
    if [ ! -f "$FILE" ]; then
        touch "$FILE"
        echo "Created $FILE"
    fi
    if ! grep -Fxq "$COMMAND" "$FILE"; then
        echo "$COMMAND" >> "$FILE"
        echo "Added to $FILE"
    else
        echo "$COMMAND already exists in $FILE"
    fi
done

echo "Profil Bash modifié pour pouvoir lancer les commandes bin/* rapidement"

####
