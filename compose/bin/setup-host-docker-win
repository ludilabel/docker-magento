#!/usr/bin/env bash
set -o errexit

# Arguments :
# $1 : (Optionnel) WIN_HOST : chemin complet Windows du fichier hosts

# debogage
# set -x

source env/dev-setup-config.env
source bin/terminal-colors
source bin/wsl-fn

if [ "$1" ]; then
  WIN_HOST="$1"
else
    if [ "$OS_HOSTS" ]; then
        echo "Le chemin windows du fichier hosts est déjà configuré : $(yellow "$OS_HOSTS")"
        wsl_win_host="$OS_HOSTS"
    else
        echo "Entrée pour la valeur par défaut"
        echo "Sinon coller votre chemin Windows complet du fichier hosts"
        read -r -p "(par défaut : C:\Windows\System32\drivers\etc\hosts) : " WIN_HOST
        WIN_HOST=${WIN_HOST:-"\"C:\\Windows\\System32\\drivers\\etc\\hosts\""}
    fi
fi

if [[ ! "$OS_HOSTS" || "$1" ]]; then
   wsl_win_host=$(convertWinPathToWslPath "$WIN_HOST")
fi

# Get the local IP address from Windows + strip return line
local_ip=$(powershell.exe -Command "(Get-NetIPAddress -AddressFamily IPv4 | Where-Object { \$_.InterfaceAlias -like '*Ethernet*' -and \$_.IPAddress -match '^192\.168\.' }).IPAddress" | tr -d '\r\n')

# Entries to add to hosts file
# va permettre entre autre à XDebug de communiquer avec l'IDE PHPStorm sur Windows (conf xdebug : client_host -> host.docker.internal)
entries_to_add=(
    "$local_ip host.docker.internal"
    "$local_ip gateway.docker.internal"
)

# Check and remove entries that already exist in the hosts file
for i in "${!entries_to_add[@]}"; do
    entry="${entries_to_add[$i]}"

    # Check if the entry already exists in the hosts file
    if grep -qF "$entry" "$wsl_win_host"; then
        echo "Entry '$entry' already exists in the hosts file."
        unset 'entries_to_add[i]'
    fi
done

if [ ${#entries_to_add[@]} -gt 0 ]; then
    echo "Nous avons analysé votre fichier hosts"
    echo "Il manque les entrées suivantes, copier-coller les dans $WIN_HOST en mode administrateur."

    # Affichage de la liste dans la console pour être copiée
    echo
        for entry in "${entries_to_add[@]}"; do
            yellow "$entry"
        done

    read -p "Continuer l'exécution du script"
else
    echo "Toutes les entrées existent déjà dans le fichier hosts."
fi