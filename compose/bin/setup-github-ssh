#!/usr/bin/env bash
set -o errexit

source env/dev-setup-config.env
source bin/setup-ssh-fn
source bin/terminal-colors

# Arguments :
# $1 : github_user (Optionnel) utilisateur ssh sur github

# Nom de l'utilisateur ssh
if [ "$1" ]; then
  github_user="$1"
else
    if [ "$GITHUB_USER" ]; then
        recette_db_user="$GITHUB_USER"
        echo "L'email du compte utilisateur github est déjà configuré : $(yellow "$GITHUB_USER")"
    else
      echo "Veuillez saisir l'email de votre compte utilisateur github"
      read -r -p "(ex : employe@entreprise.fr) : " github_user
    fi
fi

if [ "$GITHUB_USER" ]; then
  if [ "$1" ]; then
    sed -i "s|^GITHUB_USER=.*|GITHUB_USER=\"$github_user\"|" env/dev-setup-config.env
  fi
else
    echo "Ajout de la variable GITHUB_USER à la fin du fichier env/dev-setup-config.env."
    echo "GITHUB_USER=\"$github_user\"" >> env/dev-setup-config.env
fi


if [ "$2" = "regenerate-key" ] || [ -z "$GITHUB_DEBIAN_RSA_PATH" ];  then
    GITHUB_DEBIAN_RSA_PATH="$HOME/.ssh/id_ed25519"

    # Si le fichier existe déjà même s’il n’est pas dans la configuration
    # on ne la régénère pas - présuppose qu’à la précédente installation l’utilisateur a bien gardé le nom par défaut
    if [ -f "$GITHUB_DEBIAN_RSA_PATH" ]; then
        echo "La clé privée SSH pour github existe déjà : $GITHUB_DEBIAN_RSA_PATH"
        echo "Passage à l'étape suivante sans régénération."
    else
      # Clé privée ssh
      echo "Génération de la paire de clé SSH ($(yellow "Entrée à chaque question car on veut utiliser les valeurs par défaut"))"
      ssh-keygen -t ed25519 -C "$github_user"

    fi

    echo "Ajout de la variable GITHUB_DEBIAN_RSA_PATH à la fin du fichier env/dev-setup-config.env."
    echo "GITHUB_DEBIAN_RSA_PATH=\"$GITHUB_DEBIAN_RSA_PATH\"" >> env/dev-setup-config.env

    # Output the content of the public key
    echo "Voici la clé publique. Copie et ajoute la à ton compte GitHub (celui de l'e-mail fourni):"
    yellow "$(cat "${GITHUB_DEBIAN_RSA_PATH}.pub")"

    read -p "Continuer une fois que la clé publique est enregistrée sur le compte Gihub..."

    # Add authenticity of github host for future connections
    echo "Si demande de reconnaissance de l’authenticité de github pour les futures connexions => répondre yes"
    # NB : pas besoin de préciser notre compte utilisateur pour la connexion SSH
    # car github a crée un utilisateur unique "git" que tout le monde partage
    ssh -T git@github.com || true
  else
      echo "La clé privée ssh github est déjà installée sur la Debian et se trouve : $GITHUB_DEBIAN_RSA_PATH"
      echo "Voici la clé publique. Copie et ajoute la à ton compte GitHub :"
      yellow "$(cat "${GITHUB_DEBIAN_RSA_PATH}.pub")"
      echo "Si tu veux écraser l’ancienne clé par une nouvelle, utilise la commande bin/debug"
fi

# Recopie de la clé ssh github dans Windows
echo "Cette clé privée ssh github peut être utilisée pour votre session utilisateur Windows."
echo "Cela permet de lancer les commandes Git depuis le terminal sans être dépendant de PHPStorm"
read -p "Voulez-vous la copier ? (oui/non) : " reponse

# Vérifier la réponse de l'utilisateur
if [[ "$reponse" != "oui" ]]; then
    echo "Pas de copie dans Windows."
  else
    bin/setup-github-ssh-win-copie "$GITHUB_DEBIAN_RSA_PATH"
fi