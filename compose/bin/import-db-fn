#!/usr/bin/env bash

source env/dev-setup-config.env
source bin/setup-ssh-fn

import_prompt_sql() {

  echo "Veuillez coller un chemin Windows de fichier de sauvegarde SQL"
  read -r -p "(ex : D:\projets\magento\import\recette_dump.sql) : " win_bdd_file_path

  # Transformation du chemin Windows en chemin Debian WSL2
  if [[ "$win_bdd_file_path" =~ ^[A-Za-z]:\\ ]]; then

      # Remplacer les antislashs par des slashes pour la conversion avec wslpath
      win_bdd_file_path=$(echo "$win_bdd_file_path" | sed 's|\\|/|g')

      # Convertir le chemin au format WSL
      win_bdd_file_path=$(wslpath -a "$win_bdd_file_path")

      if [ $? -ne 0 ]; then
          echo "Erreur lors de la conversion du chemin."
          exit 1
      fi

      echo "Chemin converti au format Debian WSL2 : $win_bdd_file_path"
  fi

  # Vérifier si le fichier existe
  if [ ! -f "$win_bdd_file_path" ]; then
      echo "Le fichier spécifié n'existe pas."
      exit 1
  fi

  FILENAME=$(basename "$win_bdd_file_path")

  echo "Téléchargement du fichier backup sur la Debian"
  rsync -av "$win_bdd_file_path" "$TRANSFER_PATH"

  echo "Importation de la base dans le service Docker (long...)"
  bin/clinotty mysql -h db -u root -pmagento -e "DROP DATABASE IF EXISTS magento; CREATE DATABASE magento;"
  bin/clinotty mysql -h db -u root -pmagento magento < "$TRANSFER_PATH/$FILENAME"
}

import_param_sql() {
  local sql_file="$1"

# Si c'est un chemin Windows, on le transforme en chemin Debian WSL2
  if [[ "$sql_file" =~ ^[A-Za-z]:\\ ]]; then

      # Remplacer les antislashs par des slashes pour la conversion avec wslpath
      sql_file=$(echo "$sql_file" | sed 's|\\|/|g')

      # Convertir le chemin au format WSL
      sql_file=$(wslpath -a "$sql_file")

      if [ $? -ne 0 ]; then
          echo "Erreur lors de la conversion du chemin."
          exit 1
      fi

      echo "Chemin converti au format Debian WSL2 : $sql_file"
  fi

  # Vérifier si le fichier existe
  if [ ! -f "$sql_file" ]; then
      echo "Le fichier spécifié n'existe pas."
      exit 1
  fi

  FILENAME=$(basename "$sql_file")

  echo "Téléchargement du fichier backup sur la Debian"
  rsync -av "$sql_file" "$TRANSFER_PATH"

  echo "Importation de la base dans le service Docker (long...)"

  bin/clinotty mysql -h db -u root -pmagento -e "DROP DATABASE IF EXISTS magento; CREATE DATABASE magento;"
  bin/clinotty mysql -h db -u root -pmagento magento < "$TRANSFER_PATH/$FILENAME"
}

import_recette() {

  DATE=$(date +"%Y%m%d_%H%M%S")
  DUMP_FILE="db_backup_recette_$DATE.sql"
  LOCAL_DIR="$TRANSFER_PATH"

  # bin/setup-ssh-fn
  run_ssh_agent_and_register_key "$RECETTE_DEBIAN_RSA_PATH"

  # Generate mysqldump on remote server
  ssh "$RECETTE_USER@$RECETTE_IP" "mysqldump -u $RECETTE_DB_USER -p'$RECETTE_DB_PASS' $RECETTE_DB_NAME > /tmp/$DUMP_FILE"

  # Download the dump file to local directory
  echo "Téléchargement du fichier backup sur la Debian"
  scp "$RECETTE_USER@$RECETTE_IP:/tmp/$DUMP_FILE" "$LOCAL_DIR/"

  # Clean up: Remove the dump file from the remote server
  ssh "$RECETTE_USER@$RECETTE_IP" "rm /tmp/$DUMP_FILE"

  echo "Importation de la base dans le service Docker (long...)"
  bin/clinotty mysql -h db -u root -pmagento -e "DROP DATABASE IF EXISTS magento; CREATE DATABASE magento;"
  bin/clinotty mysql -h db -u root -pmagento magento < "$LOCAL_DIR/$DUMP_FILE"
}